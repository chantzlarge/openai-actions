name: 'OpenAI Action'
description: 'TBD'

inputs:
  github_token:
    description: 'GitHub token for authentication.'
    required: true
  openai_api_key:
    description: 'OpenAI API key for accessing OpenAI services.'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Prepare Data and Generate AI Completion in Docker
      uses: docker://registry.gitlab.com/gitlab-ci-utils/curl-jq
      with:
        entrypoint: /bin/sh
        args: |- 
          -c "
          system_message="You are a helpful AI. Create an improved pull request description."
          user_prompt="Event:\n$(cat pr_event_trimmed.json)\n\nTemplate:\n$(cat pr_template_trimmed.txt)\n\nPlease create an improved PR description."
          
          request_data=$(jq -n \
            --arg system "$system_message" \
            --arg user "$user_prompt" \
            '{
              "model": "gpt-4",
              "messages": [
                {
                  "role": "system",
                  "content": $system
                },
                {
                  "role": "user",
                  "content": $user
                }
              ]
            }'
          )

          response=$(curl -s -X POST "https://api.openai.com/v1/chat/completions" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ inputs.openai_api_key }}" \
            -d "$request_data")

          refined_description=$(echo "$response" | jq -r '.choices[0].message.content')
          echo "$refined_description" > pull_request_description.txt
          "

    - name: Update Issue Using GitHub Script
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const fs = require('fs');
          const issueNumber = parseInt(fs.readFileSync('issue_number.txt', 'utf8').trim(), 10);
          const refined = fs.readFileSync('issue_description.txt', 'utf8');

          await github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: refined
          });
