name: 'OpenAI Action'
description: 'TBD'

inputs:
  github_token:
    description: 'GitHub token for authentication.'
    required: true
  model:
    default: 'gpt-4'
    description: 'OpenAI API key for accessing OpenAI services.'
    required: true
  openai_api_key:
    description: 'OpenAI API key for accessing OpenAI services.'
    required: true

runs:
  using: 'composite'
  steps:

    - name: Checkout code
      id: checkout-code
      uses: actions/checkout@v3

    - name: Prepare Data and Generate AI Completion in Docker
      id: openai
      if: ${{ github.event_name == 'pull_request' }}
      uses: docker://registry.gitlab.com/gitlab-ci-utils/curl-jq
      with:
        entrypoint: /bin/bash
        args: |
          curl -s -X POST 'https://api.openai.com/v1/chat/completions' \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer ${{ inputs.openai_api_key }}' \
            -d '{"model":"${{ inputs.model }}","messages":[{"role":"system","content":"You are a helpful AI. Create an improved pull request description."},{"role":"user","content:"pull_request:\n\n .pull_request \n\nPlease create an improved PR description."}]}' \
            >> $GITHUB_OUTPUT

    - name: Update PR Using GitHub Script
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const fs = require('fs');
          const pullNumber = parseInt(fs.readFileSync('pull_number.txt', 'utf8').trim(), 10);
          const body = fs.readFileSync('body.txt', 'utf8');
          await github.rest.pulls.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pullNumber,
            body: body
          });
